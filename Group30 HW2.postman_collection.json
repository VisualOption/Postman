{
	"info": {
		"_postman_id": "17491be2-95cc-420c-9aff-d8f36097b9db",
		"name": "Group30 HW2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18608702"
	},
	"item": [
		{
			"name": "task1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "task2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Спарсить response body в json.\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"var name = jsonData.name;\r",
							"var age = jsonData.age;\r",
							"var salary = jsonData.salary;\r",
							"var family = jsonData.family;\r",
							"var salary_1_5 = jsonData.family.u_salary_1_5_year;\r",
							"\r",
							"//Проверить, что name в ответе равно name s request (name вбить руками)\r",
							"pm.test(\"Name check\", function () {\r",
							"    pm.expect(jsonData.name).to.include(\"Ruslan\");\r",
							"});\r",
							"\r",
							"//Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"Age check\", function () {\r",
							"    pm.expect(jsonData.age).to.include(\"31\");\r",
							"});\r",
							"\r",
							"//Проверить, что salary в ответе равно salary s request (salary вбить руками)\r",
							"pm.test(\"Salary check\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(1000);\r",
							"});\r",
							"\r",
							"//Спарсить request\r",
							"var requestData = request.data;\r",
							"\r",
							"var req_name = requestData.name;\r",
							"var req_age = requestData.age;\r",
							"var req_salary = parseInt(requestData.salary);\r",
							"var req_salary_1_5 = requestData.salary * 4;\r",
							"\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request)\r",
							"pm.test(\"Compare names\", function () {\r",
							"    pm.expect(req_name).to.eql(name);\r",
							"});\r",
							"\r",
							"//Проверить, что age в ответе равно age s request (age забрать из request)\r",
							"pm.test(\"Compare ages\", function () {\r",
							"    pm.expect(req_age).to.eql(age);\r",
							"});\r",
							"\r",
							"//Проверить, что salary в ответе равно salary s request (salary забрать из request)\r",
							"pm.test(\"Compare salarys\", function () {\r",
							"    pm.expect(req_salary).to.eql(salary);\r",
							"});\r",
							"\r",
							"//Вывести в консоль параметр family из response\r",
							"console.log(\"Family is: \", family)\r",
							"\r",
							"//Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"Compare salary 1.5 year\", function () {\r",
							"    pm.expect(req_salary_1_5).to.eql(salary_1_5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Ruslan",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						},
						{
							"key": "age",
							"value": "31",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "task3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Спарсить response body в json\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"var name = jsonData.name;\r",
							"var age = jsonData.age;\r",
							"var salary = jsonData.salary;\r",
							"var family = jsonData.family;\r",
							"var children = jsonData.family.children;\r",
							"var pets = jsonData.family.pets;\r",
							"var dog = jsonData.family.pets.dog;\r",
							"var dogName = jsonData.family.pets.dog.name;\r",
							"var dogAge = jsonData.family.pets.dog.age;\r",
							"\r",
							"//Спарсить request\r",
							"var requestData = pm.request.url.query.toObject();\r",
							"\r",
							"var req_name = requestData.name;\r",
							"var req_age = requestData.age;\r",
							"var req_salary = parseInt(requestData.salary);\r",
							"\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request)\r",
							"pm.test(\"Check response name\", function () {\r",
							"    pm.expect(name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"//Проверить, что age в ответе равно age s request (age забрать из request)\r",
							"pm.test(\"Check response age\", function () {\r",
							"    pm.expect(age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"//Проверить, что salary в ответе равно salary s request (salary забрать из request)\r",
							"pm.test(\"Check response name\", function () {\r",
							"    pm.expect(salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"//Вывести в консоль параметр family из response\r",
							"console.log(\"Family: \", family)\r",
							"\r",
							"//Проверить, что у параметра dog есть параметры name\r",
							"pm.test(\"Check parameter 'name' of dog\", function () {\r",
							"    pm.expect(JSON.stringify(dog)).to.include(\"name\");\r",
							"});\r",
							"\r",
							"//Проверить, что у параметра dog есть параметры age\r",
							"pm.test(\"Check parameter 'age' of dog\", function () {\r",
							"    pm.expect(JSON.stringify(dog)).to.include(\"age\");\r",
							"});\r",
							"\r",
							"//Проверить, что параметр name имеет значение Luky\r",
							"pm.test(\"Check parameter Luky\", function () {\r",
							"    pm.expect(dogName).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"//Проверить, что параметр age имеет значение 4\r",
							"pm.test(\"Check parameter year 4\", function () {\r",
							"    pm.expect(dogAge).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Ruslan&age=31&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Ruslan"
						},
						{
							"key": "age",
							"value": "31"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "task4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Спарсить response body в json\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"var age = jsonData.age;\r",
							"var name = jsonData.name;\r",
							"var salary = jsonData.salary;\r",
							"\r",
							"//Спарсить request\r",
							"\r",
							"var requestData = pm.request.url.query.toObject();\r",
							"\r",
							"var req_name = requestData.name;\r",
							"var req_age = parseInt(requestData.age);\r",
							"var req_salary = parseInt(requestData.salary);\r",
							"\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request)\r",
							"pm.test(\"Check response name\", function () {\r",
							"    pm.expect(name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"//Проверить, что age в ответе равно age из request (age забрать из request)\r",
							"pm.test(\"Check response age\", function () {\r",
							"    pm.expect(age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"//Вывести в консоль параметр salary из request\r",
							"console.log(\"Salary: \", req_salary)\r",
							"\r",
							"//Вывести в консоль параметр salary из response\r",
							"console.log(\"Salary: \", salary)\r",
							"\r",
							"//Вывести в консоль 0-й элемент параметра salary из response\r",
							"console.log(\"Salary0: \", salary[0])\r",
							"\r",
							"//Вывести в консоль 1-й элемент параметра salary параметр salary из response\r",
							"console.log(\"Salary1: \", salary[1])\r",
							"\r",
							"//Вывести в консоль 2-й элемент параметра salary параметр salary из response\r",
							"console.log(\"Salary2: \", salary[2])\r",
							"\r",
							"//Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request)\r",
							"pm.test(\"Salary equal 1\", function () {\r",
							"    pm.expect(salary[0]).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"//Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request)\r",
							"pm.test(\"Salary equal 2\", function () {\r",
							"    pm.expect(salary[1]).to.eql(String(req_salary*2));\r",
							"});\r",
							"\r",
							"//Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request)\r",
							"pm.test(\"Salary equal 3\", function () {\r",
							"    pm.expect(salary[2]).to.eql(String(req_salary*3));\r",
							"});\r",
							"\r",
							"//Написать цикл который выведет в консоль по порядку элементы списка из параметра salary\r",
							"salary.forEach((item) => {console.log(item)});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Ruslan&age=31&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Ruslan"
						},
						{
							"key": "age",
							"value": "31"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		}
	]
}